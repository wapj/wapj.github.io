{"version":3,"sources":["webpack:///./src/components/comment.js","webpack:///./src/templates/blog-post.js"],"names":["Comment","React","memo","repo","theme","containerRef","createRef","useLayoutEffect","utterances","document","createElement","attributes","src","label","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","current","appendChild","ref","displayName","require","data","pageContext","post","markdownRemark","title","frontmatter","html","slug","next","prev","menu","path","image","childImageSharp","resize","description","excerpt","style","clear","dangerouslySetInnerHTML","__html","fontFamily","to","fields","marginBottom"],"mappings":"mMAKMA,EAAUC,IAAMC,MAAK,YAAqC,IAAlCC,EAAiC,EAAjCA,KAAiC,IAA3BC,aAA2B,MAApB,eAAoB,EACvDC,EAAeC,sBAsBrB,OApBAC,2BAAgB,WACd,IAAMC,EAAaC,SAASC,cAAc,UAEpCC,EAAa,CACjBC,IAVM,gCAWNT,OACAC,QACA,aAAc,WACdS,MAAO,iBACPC,YAAa,YACbC,MAAO,QAGTC,OAAOC,QAAQN,GAAYO,SAAQ,YAAmB,IAAjBC,EAAgB,KAAXC,EAAW,KACnDZ,EAAWa,aAAaF,EAAKC,MAG/Bf,EAAaiB,QAAQC,YAAYf,KAChC,CAACH,EAAcF,EAAMC,IAEjB,mBAAKoB,IAAKnB,OAGnBL,EAAQyB,YAAc,aAEPzB,QC1Bf0B,EAAQ,QAEO,sBAA4B,IAAD,IAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAChBC,EAAOF,EAAKG,eACZC,EAAQF,EAAKG,YAAYD,MACzBE,EAAOJ,EAAKI,KACVC,EAAqBN,EAArBM,KAAMC,EAAeP,EAAfO,KAAMC,EAASR,EAATQ,KAEpB,OACE,YAAC,IAAD,CAAQC,KAAK,OAAON,MAAOF,EAAKG,YAAYD,OAC1C,YAAC,IAAD,CACEO,KAAMJ,EACNH,MAAOF,EAAKG,YAAYD,MACxBQ,MAAK,UAAEV,EAAKG,YAAYO,aAAnB,iBAAE,EAAwBC,uBAA1B,aAAE,EAAyCC,OAAO7B,IACvD8B,YAAab,EAAKc,UAEpB,mBAAKC,MAAO,CAAEC,MAAO,SACnB,sBAAKd,GAEL,mBAAKe,wBAAyB,CAAEC,OAAQd,KAExC,uBACA,mBAAKW,MAAO,CAAEI,WAAY,WACvBZ,GAAQ,YAAC,IAAD,CAAMa,GAAIb,EAAKc,OAAOhB,MAAtB,WAAqCE,EAAKJ,YAAYD,QAEjE,mBAAKa,MAAO,CAAEO,aAAc,OAAQH,WAAY,WAC7Cb,GAAQ,YAAC,IAAD,CAAMc,GAAId,EAAKe,OAAOhB,MAAtB,WAAqCC,EAAKH,YAAYD,SAGnE,uBACE,YAAC,EAAD,CAAS5B,KAAK","file":"component---src-templates-blog-post-js-a78b0f39a536c3bf5ec3.js","sourcesContent":["import React, { createRef, useLayoutEffect } from 'react';\n\nconst src = 'https://utteranc.es/client.js';\n\n\nconst Comment = React.memo(({ repo, theme ='github-light'}) => {\n  const containerRef = createRef();\n\n  useLayoutEffect(() => {\n    const utterances = document.createElement('script');\n\n    const attributes = {\n      src,\n      repo,\n      theme,\n      'issue-term': 'pathname',\n      label: '‚ú®üí¨ comments ‚ú®',\n      crossOrigin: 'anonymous',\n      async: 'true',\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    containerRef.current.appendChild(utterances);\n  }, [containerRef, repo, theme]);\n\n  return <div ref={containerRef} />;\n});\n\nComment.displayName = 'Utterances';\n\nexport default Comment;\n","import React from \"react\";\n\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Comment from \"../components/comment\";\n\nrequire(`gatsby-remark-mathjax-ssr/mathjax.css`);\n\nexport default ({ data, pageContext }) => {\n  const post = data.markdownRemark;\n  const title = post.frontmatter.title;\n  const html = post.html;\n  const { slug, next, prev } = pageContext;\n\n  return (\n    <Layout menu=\"blog\" title={post.frontmatter.title}>\n      <SEO\n        path={slug}\n        title={post.frontmatter.title}\n        image={post.frontmatter.image?.childImageSharp?.resize.src}\n        description={post.excerpt}\n      />\n      <div style={{ clear: \"both\" }}>\n        <h1>{title}</h1>\n\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n\n        <hr></hr>\n        <div style={{ fontFamily: \"avenir\" }}>\n          {prev && <Link to={prev.fields.slug}>Ïù¥Ï†ÑÍ∏Ä: {`${prev.frontmatter.title}`}</Link>}\n        </div>\n        <div style={{ marginBottom: \"1rem\", fontFamily: \"avenir\" }}>\n          {next && <Link to={next.fields.slug}>Îã§ÏùåÍ∏Ä: {`${next.frontmatter.title}`}</Link>}\n        </div>\n      </div>\n      <div>\n        <Comment repo=\"wapj/blog\" />\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt(pruneLength: 100, truncate: false, format: HTML)\n      tableOfContents\n      timeToRead\n      frontmatter {\n        title\n        tags\n        category\n        image: featured {\n          childImageSharp {\n            resize {\n              src\n              height\n              width\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}