{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/basic-webpack/","result":{"data":{"markdownRemark":{"html":"<h2><a href=\"https://webpack.js.org/\">웹팩</a>이 뭘까?</h2>\n<p>공식사이트에 나와 있는 문서를 보면 웹팩은 모오던 자바스크립트 어플리케이션을 위한 <code class=\"language-text\">스태틱 모듈 번들러</code> 라이브러리이다. 이말을 분해해서 적어본다면 이렇다.</p>\n<p><code class=\"language-text\">스태틱</code> 이라고 하는 말은 다이나믹의 반대이니 모듈이 동적으로 변하지 않는다는 의미이겠다.\n<code class=\"language-text\">모듈</code>은 자바스크립트 코드 뭉치를 모듈이라고 하는 것이고, <code class=\"language-text\">번들러</code> 라고 하는 것은 스태틱 모듈들을 하나의 파일로 만들어 주는 녀석 이라는 뜻이다. 번들이라는 뜻자체가 여러가지를 하나로 묶은 것을 번들이라고 하는데, 웹팩은 번들러 역활을 잘하기 위해 존재하는 녀석이라는 뜻이 된다.</p>\n<p>실제로는 우리가 정의한 의존성 파일에서 모든 의존성을 찾아서 의존성그래프(dependency graph)를 만든다음, 어플리케이션에 필요한 모든 모듈을 적은 갯수의 번들들로(대부분은 하나의 파일로) 만들어준다.</p>\n<p>백마디 말보다 한마디 코드가 더 나은 설명일 때가 많으니, 실제로 예제를 보면서 확인해보자.</p>\n<h2>웹팩 맛보기</h2>\n<blockquote>\n<p><a href=\"https://webpack.js.org/guides/getting-started/\">webpack 사이트</a> 를 참고하였다.</p>\n</blockquote>\n<p>아래와 같은 스크립트로 프로젝트를 만들자.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">mkdir</span> webpack-demo\n<span class=\"token builtin class-name\">cd</span> webpack-demo\n<span class=\"token function\">npm</span> init -y\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> webpack webpack-cli --save-dev</code></pre></div>\n<p>그리고 index.html 을 프로젝트 디렉토리에 만들고 src 디렉토리 밑에 index.js 파일도 만들자.\n아래와 같은 구조가 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">├── index.html\n├── package-lock.json\n├── package.json\n└── src\n    └── index.js</code></pre></div>\n<p>index.html 은 아래와 같이 되어 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Getting Started<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/lodash@4.16.6<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./src/index.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>index.js 는 아래와 같이 <code class=\"language-text\">hello webpack</code> 을 화면에 출력하는 코드이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// Lodash, currently included via a script, is required for this line to work</span>\n  element<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"webpack\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> element\n<span class=\"token punctuation\">}</span>\n\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>index.js 에서는 <code class=\"language-text\">_.join</code> 함수를 사용하고 있는데, 이는 자바스크립트 함수가 아니라 lodash 에 의존성이 있는 함수이다.\n그런데 이러한 의존성을 index.html 파일에서 관리하는 것은 아래와 같은 문제가 있다.</p>\n<ul>\n<li>index.js 에서 의존성을 명확하게 알기 힘들다.</li>\n<li>의존성 파일이 없거나 여러개의 순서가 뒤바뀌거나 하는 경우 제대로 동작하지 않을 수 있다.</li>\n<li>사용하지 않는 의존성의 경우에도 웹브라우저가 다운로드를 받게된다.</li>\n</ul>\n<p>웹팩을 사용하면 이러한 문제들을 편하게 해결할 수 있다.</p>\n<h3>번들 만들기</h3>\n<p>위에서 만들었던 index.html 을 dist 디렉토리로 옮기자</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">├── dist\n│   └── index.html # 여기로 옮김\n├── package-lock.json\n├── package.json\n└── src\n    └── index.js</code></pre></div>\n<p>의존성을 프로젝트에서 관리 할것이므로 설치를 해주자.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save lodash</code></pre></div>\n<p><code class=\"language-text\">index.js</code> 에서는 모듈 시스템을 사용하여 명시적으로 <code class=\"language-text\">lodash</code> 를 임포트 해주자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 명시적으로 lodash 를 임포트 해준다</span>\n<span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">\"lodash\"</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span>\n  element<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"hell\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"webpack\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> element\n<span class=\"token punctuation\">}</span>\n\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">index.js</code> 에서 lodash 를 임포트 해줬으니 이제 index.html 에서는 빼줘야한다.\n아래와 같이 index.html 에서 lodash 를 불러오던 script태그를 삭제해주자.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>이제 <code class=\"language-text\">npx webpack</code> 을 실행하면 <code class=\"language-text\">dist/main.js</code> 가 생기게 되는데 이는\nwebpack에서 기본값으로 엔트리 포인트는 <code class=\"language-text\">src/index.js</code> 가되어 있고,\noutput 으로 <code class=\"language-text\">dist/main.js</code> 가 되어 있기 때문이다.</p>\n<p><code class=\"language-text\">npx</code> 는 npm 5.2.0 이후부터 실행할 수 있는 명령어인데, <code class=\"language-text\">npx webpack</code> 은 <code class=\"language-text\">./node_modules/.bin/webpack</code> 과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"s\"><pre class=\"language-s\"><code class=\"language-s\">npx webpack\nHash: 46d24a7e2660cba51209\nVersion: webpack 4.44.1\nTime: 1674ms\nBuilt at: 2020-08-12 09:37:03\n  Asset      Size  Chunks             Chunk Names\nmain.js  72.3 KiB       0  [emitted]  main\nEntrypoint main = main.js\n[1] ./src/index.js 214 bytes {0} [built]\n[2] (webpack)/buildin/global.js 472 bytes {0} [built]\n[3] (webpack)/buildin/module.js 497 bytes {0} [built]\n    + 1 hidden module</code></pre></div>\n<p><code class=\"language-text\">npx</code>를 실행 하면 위와 같이 해시값, 웹팩의 버전, 빌드하는데 걸린 시간, 결과물의 파일명 사이즈 청크등 다양한 정보가 나오게 되고 결과물로 <code class=\"language-text\">dist/main.js</code> 가 생기게 된다.</p>\n<h3>webpack config 사용하기</h3>\n<p>버전4 부터 웹팩은 아무런 설정이 필요하지 않지만, 좀 더 디테일한 설정이 필요한 경우는 설정파일을 만들어서 사용할 수 있다.\n프로젝트 디렉토리에 <code class=\"language-text\">webpack.config.js</code> 를 만들고 아래와 같이 설정한 다음 저장하자. 설정에 관한 자세한 내용은 <a href=\"https://webpack.js.org/configuration/\">웹팩설정</a> 에서 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">entry</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./src/index.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">filename</span><span class=\"token operator\">:</span> <span class=\"token string\">\"main.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">npx webpack</code> 으로 번들링을 할 수 있다.\n웹팩 설정파일이 <code class=\"language-text\">webpack.config.js</code> 가 아닌 경우에는 <code class=\"language-text\">--config</code> 옵션을 쓸 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npx webpack --config mywebpack.config.js</code></pre></div>\n<h3>NPM 스크립트로 등록하기</h3>\n<p><code class=\"language-text\">package.json</code> 의 scripts 에 아래와 같이 등록하면 <code class=\"language-text\">npx webpack</code> 을 한번 감싸서 <code class=\"language-text\">npm run bulid</code> 로 사용할 수 있다.</p>\n<blockquote>\n<p>사실 npx webpack 이 더 간단한데.. 굳이 해야되나 싶긴하다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack-demo\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"데모\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"index.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack\"</span> <span class=\"token comment\">// npx webpack 대신 npm run build 를 사용할 수 있다.</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"keywords\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"private\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ISC\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"webpack\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^4.44.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"webpack-cli\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.3.12\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"lodash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^4.17.19\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","excerpt":"<h2><a href=\"https://webpack.js.org/\">웹팩</a>이 뭘까?</h2>\n<p>공식사이트에 나와 있는 문서를 보면 웹팩은 모오던 자바스크립트 어플리케이션을 위한 <code class=\"language-text\">스태틱 모듈 번들러</code> 라이브러리이다. 이말을 분해해서 적어본다면 이렇다.</p>\n<p><code class=\"language-text\">스태틱</code> 이라고 하는 말은 다이나믹의 반대이니 모듈이 동적으로 변하지 않는다는 의미이겠다.\n<code class=\"language-text\">모듈</code>은 자바스크립트 코드 뭉치를 모듈이라고 하는 것이고, <code class=\"language-text\">번들러</code>…</p>","tableOfContents":"<ul>\n<li><a href=\"/2020/basic-webpack/#%EC%9B%B9%ED%8C%A9%EC%9D%B4-%EB%AD%98%EA%B9%8C\">웹팩이 뭘까?</a></li>\n<li>\n<p><a href=\"/2020/basic-webpack/#%EC%9B%B9%ED%8C%A9-%EB%A7%9B%EB%B3%B4%EA%B8%B0\">웹팩 맛보기</a></p>\n<ul>\n<li><a href=\"/2020/basic-webpack/#%EB%B2%88%EB%93%A4-%EB%A7%8C%EB%93%A4%EA%B8%B0\">번들 만들기</a></li>\n<li><a href=\"/2020/basic-webpack/#webpack-config-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\">webpack config 사용하기</a></li>\n<li><a href=\"/2020/basic-webpack/#npm-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A1%9C-%EB%93%B1%EB%A1%9D%ED%95%98%EA%B8%B0\">NPM 스크립트로 등록하기</a></li>\n</ul>\n</li>\n</ul>","timeToRead":4,"frontmatter":{"title":"웹팩에 대하여 알아보자1 : hello webpack","tags":["webpack"],"category":"dev","image":null}}},"pageContext":{"slug":"/2020/basic-webpack/","next":{"fields":{"slug":"/diary/what-write-a-book/"},"frontmatter":{"title":"책을 쓴다는 것","tags":["write a book"],"category":"diary","image":null}},"prev":{"fields":{"slug":"/2020/why-string-named-string/"},"frontmatter":{"title":"개발 잡담 - 문자열은 왜 스트링이라고 부를까?","tags":["python","gossip"],"category":"dev","image":null}}}},"staticQueryHashes":["3159585216","4202924991"]}