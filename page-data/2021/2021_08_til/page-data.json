{"componentChunkName":"component---src-templates-blog-post-js","path":"/2021/2021_08_til/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>리액트는 완전 초보라 모르는게 너무 많다. 나중에 까먹었을때 찾아보는 용도로 정리한다.</p>\n</blockquote>\n<h2>Object를 루프 돌려서 리액트 컴포넌트 그리기</h2>\n<p>좀 놀라운 일이지만 자바스크립트의 Object는 iterable이 아니다. 즉 for문에 사용할 수 없다. 그러면 어떻게 하면 되느냐. <code class=\"language-text\">entries()</code> 라는 메서드를 사용하면 iterable을 반환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token string\">'앤디'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token number\">123</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> o <span class=\"token keyword\">of</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 에러남</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> obj<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>다른 방법으로는 keys, forEach 를 사용하는 방법도 있다.</p>\n<p><code class=\"language-text\">object.keys().forEach((key) => { // do something })</code></p>\n<p>오브젝트로 리액트의 컴포넌트를 루프를 돌려서 그리고 싶은 경우 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Option value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>key<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>object<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Option<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2>url의 쿼리파라메터 파싱하기</h2>\n<p>구글링을 해보면 <code class=\"language-text\">query-string</code> 패키지를 쓰고 있는것을 많이 발견하고는 하는데, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams\">URLSearchParams</a>\n를 사용하자.</p>\n<p>관련해서 간단한 hook을 만들었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useLocation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router-dom\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useSearchParams</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> search <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> searchParams <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URLSearchParams</span><span class=\"token punctuation\">(</span>search<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>사용은 아래와 같이 하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const param1 = useSearchParams(\"param1\")</code></pre></div>\n<p>값이 없는 경우는 빈 문자열을 리턴하도록 해두었다.</p>\n<blockquote>\n<p>query-string 의 parse 함수가 리턴하는 타입이 string 또는 string[] 라서 굉장히 많은 삽질을 했다.</p>\n</blockquote>\n<h2>antd의 셀렉트 박스의 사이즈 고정하기</h2>\n<p>별다른 것은 없고 style에서 width 속성을 줘서 사이즈를 고정시킬 수 있다. 안그러면 선택된 값에 따라 셀렉트 박스의 가로 크기가 동적으로 변하게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Select</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token value css language-css\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span></span></span></span> <span class=\"token attr-name\">100}}</span><span class=\"token punctuation\">></span></span>\n  ...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Select</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2>조건부 렌더링</h2>\n<p>나의 경우에는 셀렉트박스의 disable 옵션을 파라메터에 따라 다르게 표시하고 싶은게 하고 싶은것이었는데, 생각보다 해야되는 것이 많아서 아예 조건부 렌더링을 하도록 변경했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">const MyComponent = ({ category }) => {\n  return (\n    &lt;>\n      {category === \"9999\" &amp;&amp; (\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Select</span> <span class=\"token attr-name\">size</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>large<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>-대분류-<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token value css language-css\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span></span></span></span> <span class=\"token attr-name\"><span class=\"token namespace\">width:</span></span> <span class=\"token attr-name\">100</span> <span class=\"token attr-name\">}}</span><span class=\"token punctuation\">></span></span>\n          ... 생략\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Select</span><span class=\"token punctuation\">></span></span>\n      )}\n\n      {category !== \"9999\" &amp;&amp; (\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Select</span> <span class=\"token attr-name\">size</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>large<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">disabled</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>{category}</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token value css language-css\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span></span></span></span> <span class=\"token attr-name\"><span class=\"token namespace\">width:</span></span> <span class=\"token attr-name\">100</span> <span class=\"token attr-name\">}}</span><span class=\"token punctuation\">></span></span>\n          ... 생략\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Select</span><span class=\"token punctuation\">></span></span>\n      )}\n    &lt;/>\n  );\n};</code></pre></div>","excerpt":"<blockquote>\n<p>리액트는 완전 초보라 모르는게 너무 많다. 나중에 까먹었을때 찾아보는 용도로 정리한다.</p>\n</blockquote>\n<h2>Object를 루프 돌려서 리액트 컴포넌트 그리기</h2>\n<p>좀 놀라운 일이지만 자바스크립트의 Object는 iterable이 아니다. 즉 for문에 사용할 수 없다. 그러면 어떻게 하면 되느냐. <code class=\"language-text\">entries()</code>…</p>","tableOfContents":"<ul>\n<li><a href=\"/2021/2021_08_til/#object%EB%A5%BC-%EB%A3%A8%ED%94%84-%EB%8F%8C%EB%A0%A4%EC%84%9C-%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EA%B7%B8%EB%A6%AC%EA%B8%B0\">Object를 루프 돌려서 리액트 컴포넌트 그리기</a></li>\n<li><a href=\"/2021/2021_08_til/#url%EC%9D%98-%EC%BF%BC%EB%A6%AC%ED%8C%8C%EB%9D%BC%EB%A9%94%ED%84%B0-%ED%8C%8C%EC%8B%B1%ED%95%98%EA%B8%B0\">url의 쿼리파라메터 파싱하기</a></li>\n<li><a href=\"/2021/2021_08_til/#antd%EC%9D%98-%EC%85%80%EB%A0%89%ED%8A%B8-%EB%B0%95%EC%8A%A4%EC%9D%98-%EC%82%AC%EC%9D%B4%EC%A6%88-%EA%B3%A0%EC%A0%95%ED%95%98%EA%B8%B0\">antd의 셀렉트 박스의 사이즈 고정하기</a></li>\n<li><a href=\"/2021/2021_08_til/#%EC%A1%B0%EA%B1%B4%EB%B6%80-%EB%A0%8C%EB%8D%94%EB%A7%81\">조건부 렌더링</a></li>\n</ul>","timeToRead":1,"frontmatter":{"title":"리액트를 하면서 배운 것들 정리","tags":["TIL","react"],"category":"dev","image":{"childImageSharp":{"resize":{"src":"/static/88e78dcae4e540c1fbad45881052f6b8/497c6/til.png","height":275,"width":400}}}}}},"pageContext":{"slug":"/2021/2021_08_til/","next":{"fields":{"slug":"/2021/2021_08_typescript_til/"},"frontmatter":{"title":"[타입스크립트] enum에 한글사용하기","tags":["TIL","react","typescript"],"category":"dev","image":{"childImageSharp":{"resize":{"src":"/static/88e78dcae4e540c1fbad45881052f6b8/497c6/til.png","height":275,"width":400}}}}},"prev":{"fields":{"slug":"/diary/2021/parenting-and-productivity/"},"frontmatter":{"title":"육아와 생산성","tags":null,"category":"diary","image":null}}}},"staticQueryHashes":["3159585216","4202924991"]}