{"version":3,"sources":["webpack:///./src/pages/my-files.js","webpack:///./src/components/seo.js"],"names":["data","allFile","edges","map","index","node","key","relativePath","prettySize","extension","birthTime","SEO","canonical","title","description","image","article","pathname","useLocation","useStaticQuery","query","site","siteMetadata","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","twitterUsername","seo","url","console","log","charSet","name","content","property","defaultProps"],"mappings":"6FAAA,yDAIe,sBAAe,IAAZA,EAAW,EAAXA,KAChB,OACE,uBACE,YAAC,IAAD,MACA,YAAC,IAAD,KACE,uBACE,mCACA,yBACE,yBACE,sBACE,8BACA,6BACA,6BACA,gCAGJ,yBACGA,EAAKC,QAAQC,MAAMC,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACtB,kBAAIC,IAAKF,GACP,sBAAKC,EAAKE,cACV,sBAAKF,EAAKG,YACV,sBAAKH,EAAKI,WACV,sBAAKJ,EAAKK,sB,kCC1B5B,8DAMMC,EAAM,SAAC,GAAsD,EAApDC,UAAqD,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC3CC,EAAaC,wBAAbD,SADyD,EAEhDE,YAAeC,GAAxBC,KAEiGC,aAAjGC,EAJyD,EAIzDA,aAAcC,EAJ2C,EAI3CA,cAAeC,EAJ4B,EAI5BA,mBAAoBC,EAJQ,EAIRA,QAASC,EAJD,EAICA,aAAcC,EAJf,EAIeA,gBAE1EC,EAAM,CACVhB,MAAOA,GAASU,EAChBT,YAAaA,GAAeW,EAC5BV,MAAM,GAAIW,GAAUX,GAASY,GAC7BG,IAAI,GAAIJ,EAAUT,GAIpB,OADAc,QAAQC,IAAIf,GAEV,YAAC,SAAD,CAAQJ,MAAOgB,EAAIhB,MAAOW,cAAeA,GACvC,oBAAMS,QAAQ,UACd,yBAAQpB,GACR,oBAAMqB,KAAK,2BAA2BC,QAAQ,gDAC9C,oBAAMD,KAAK,cAAcC,QAASN,EAAIf,cACtC,oBAAMoB,KAAK,QAAQC,QAASN,EAAId,QAC/Bc,EAAIC,KAAO,oBAAMM,SAAS,SAASD,QAASN,EAAIC,OAC/Cd,EAAiB,KAAS,oBAAMoB,SAAS,UAAUD,QAAQ,YAC5DN,EAAIhB,OAAS,oBAAMuB,SAAS,WAAWD,QAASN,EAAIhB,QACpDgB,EAAIf,aAAe,oBAAMsB,SAAS,iBAAiBD,QAASN,EAAIf,cAChEe,EAAId,OAAS,oBAAMqB,SAAS,WAAWD,QAASN,EAAId,QACrD,oBAAMmB,KAAK,eAAeC,QAAQ,wBACjCP,GAAmB,oBAAMM,KAAK,kBAAkBC,QAASP,IACzDC,EAAIhB,OAAS,oBAAMqB,KAAK,gBAAgBC,QAASN,EAAIhB,QACrDgB,EAAIf,aAAe,oBAAMoB,KAAK,sBAAsBC,QAASN,EAAIf,cACjEe,EAAId,OAAS,oBAAMmB,KAAK,gBAAgBC,QAASN,EAAId,UAK7CJ,MASfA,EAAI0B,aAAe,CACjBxB,MAAO,KACPC,YAAa,KACbC,MAAO,KACPC,SAAS,GAGX,IAAMI,EAAK","file":"component---src-pages-my-files-js-4a9f07c7fab80bd6b305.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nexport default ({ data }) => {\n  return (\n    <div>\n      <Seo></Seo>\n      <Layout>\n        <div>\n          <h1>내 사이트 파일들</h1>\n          <table>\n            <thead>\n              <tr>\n                <th>상대경로</th>\n                <th>사이즈</th>\n                <th>확장자</th>\n                <th>생성시간</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.allFile.edges.map(({ node }, index) => (\n                <tr key={index}>\n                  <td>{node.relativePath}</td>\n                  <td>{node.prettySize}</td>\n                  <td>{node.extension}</td>\n                  <td>{node.birthTime}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </Layout>\n    </div>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allFile {\n      edges {\n        node {\n          relativePath\n          prettySize\n          extension\n          birthTime(fromNow: true)\n        }\n      }\n    }\n  }\n`\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { useLocation } from \"@reach/router\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst SEO = ({ canonical, title, description, image, article }) => {\n  const { pathname } = useLocation();\n  const { site } = useStaticQuery(query);\n\n  const { defaultTitle, titleTemplate, defaultDescription, siteUrl, defaultImage, twitterUsername } = site.siteMetadata;\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image || defaultImage}`,\n    url: `${siteUrl}${pathname}`,\n  };\n\n  console.log(pathname);\n  return (\n    <Helmet title={seo.title} titleTemplate={titleTemplate}>\n      <meta charSet=\"utf-8\" />\n      <title>{title}</title>  \n      <meta name=\"google-site-verification\" content=\"DKf0uKbVabYGKz0sq8wWSyZz_1vtPx3Pey1ifAguz-E\" />\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      {seo.url && <meta property=\"og:url\" content={seo.url} />}\n      {(article ? true : null) && <meta property=\"og:type\" content=\"article\" />}\n      {seo.title && <meta property=\"og:title\" content={seo.title} />}\n      {seo.description && <meta property=\"og:description\" content={seo.description} />}\n      {seo.image && <meta property=\"og:image\" content={seo.image} />}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      {twitterUsername && <meta name=\"twitter:creator\" content={twitterUsername} />}\n      {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n      {seo.description && <meta name=\"twitter:description\" content={seo.description} />}\n      {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n    </Helmet>\n  );\n};\n\nexport default SEO;\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n  article: PropTypes.bool,\n};\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  article: false,\n};\n\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        titleTemplate\n        defaultDescription: description\n        siteUrl: url\n        defaultImage: image\n        twitterUsername\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}