{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","tagHeader","totalCount","name","map","node","slug","fields","title","frontmatter","key","to","pageQuery"],"mappings":"4FAAA,mGAwDeA,UAjDF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MACFC,EAAS,IAAOH,EAAP,WAHuB,EAEvBI,WACA,cAEf,OACE,YAAC,IAAD,CAAQC,KAAK,QACX,uBACE,sBAAKF,GACL,sBACGD,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAE,EAAUH,EAAKI,YAAfD,MACR,OACE,kBAAIE,IAAKJ,GACP,YAAC,IAAD,CAAMK,GAAIL,GAAOE,QAKzB,YAAC,IAAD,CAAMG,GAAG,SAAT,eA+BD,IAAMC,EAAS","file":"component---src-templates-tags-js-4c98cea9536e84bdafdf.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `\"${tag}\"태그에 대한 ${totalCount}개의 글이 있습니다.`\n\n  return (\n    <Layout name=\"tags\">\n      <div>\n        <h1>{tagHeader}</h1>\n        <ul>\n          {edges.map(({ node }) => {\n            const { slug } = node.fields\n            const { title } = node.frontmatter\n            return (\n              <li key={slug}>\n                <Link to={slug}>{title}</Link>\n              </li>\n            )\n          })}\n        </ul>\n        <Link to=\"/tags\">All tags</Link>\n      </div>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] }, published: { eq: true } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            tags\n            category\n            image: featured {\n              childImageSharp {\n                resize {\n                  src\n                  height\n                  width\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}