{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/title.js"],"names":["data","menu","title","description","defaultImage","css","allMarkdownRemark","totalCount","edges","map","node","key","id","to","fields","slug","frontmatter","image","src","childImageSharp","resize","width","alt","rhythm","date","tags","value","_","excerpt","query","blogTitles","parseInt","Math","random","length"],"mappings":"iZAQe,sBAAe,IAAZA,EAAW,EAAXA,KAChB,OACE,YAAC,IAAD,CAAQC,KAAK,QACX,YAAC,IAAD,CAAKC,MAAM,YAAYC,YAAY,oBAAoBC,aAAa,oBACpE,uBACE,kBACEC,IAAG,GAKFH,KAEH,sBAAKF,EAAKM,kBAAkBC,WAA5B,UACCP,EAAKM,kBAAkBE,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,mBAAKC,IAAKD,EAAKE,IACb,YAAC,IAAD,CACEC,GAAIH,EAAKI,OAAOC,KAChBV,IAAG,GAKH,qBACGK,EAAKM,YAAYC,OAChB,mBAAKC,IAAKR,EAAKM,YAAYC,MAAME,gBAAgBC,OAAOF,IAAKG,MAAM,OAAOC,IAAI,MAGlF,kBACEjB,IAAKA,YAAF,iBACgBkB,YAAO,EAAI,GAD3B,MAIFb,EAAKM,YAAYd,OAEpB,oBACEG,IAAG,GAIFK,EAAKM,YAAYQ,MAEpB,uBACA,uBACGd,EAAKM,YAAYS,MAAQ,mCAEzBf,EAAKM,YAAYS,MAChBf,EAAKM,YAAYS,KAAKhB,KAAI,SAACiB,EAAOC,GAChC,OAAUD,EAAV,QAGN,qBAAIhB,EAAKkB,iBAShB,IAAMC,EAAK,a,kCCpElB,IAAMC,EAAa,CAAC,2BAA4B,2BAE5C5B,EAAQ4B,EAAWC,SAASC,KAAKC,SAAWH,EAAWI,SAE5ChC","file":"component---src-pages-index-js-24eed60ce8b3c5736bdf.js","sourcesContent":["import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport { Link, graphql } from \"gatsby\";\nimport { rhythm } from \"../utils/typography\";\nimport Layout from \"../components/layout\";\nimport title from \"../components/title\";\nimport SEO from \"../components/seo\";\n\nexport default ({ data }) => {\n  return (\n    <Layout menu=\"home\">\n      <SEO title=\"승귤의 개발이야기\" description=\"개발관련된 이야기가 올라옵니다.\" defaultImage=\"/image/gyus.png\" />\n      <div>\n        <h1\n          css={css`\n            display: inline-block;\n            border-bottom: 1px solid;\n          `}\n        >\n          {title}\n        </h1>\n        <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link\n              to={node.fields.slug}\n              css={css`\n                text-decoration: none;\n                color: inherit;\n              `}\n            >\n              <p>\n                {node.frontmatter.image && (\n                  <img src={node.frontmatter.image.childImageSharp.resize.src} width=\"100%\" alt=\"\" />\n                )}\n              </p>\n              <h3\n                css={css`\n                  margin-bottom: ${rhythm(1 / 4)};\n                `}\n              >\n                {node.frontmatter.title}\n              </h3>\n              <span\n                css={css`\n                  color: #bbb;\n                `}\n              >\n                {node.frontmatter.date}\n              </span>\n              <br />\n              <div>\n                {node.frontmatter.tags && <span>tags : </span>}\n\n                {node.frontmatter.tags &&\n                  node.frontmatter.tags.map((value, _) => {\n                    return `${value} `;\n                  })}\n              </div>\n              <p>{node.excerpt}</p>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  {\n    allMarkdownRemark(\n      filter: { frontmatter: { published: { eq: true } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 100, truncate: true, format: PLAIN)\n\n          frontmatter {\n            title\n            date(formatString: \"YYYY.MM.DD\")\n            tags\n            category\n          }\n        }\n      }\n    }\n  }\n`;\n","const blogTitles = [`Fake it till you make it`, \"Focus on just one thing\"]\n\nlet title = blogTitles[parseInt(Math.random() * blogTitles.length)]\n\nexport default title\n"],"sourceRoot":""}