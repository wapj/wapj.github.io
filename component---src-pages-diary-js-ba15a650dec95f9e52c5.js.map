{"version":3,"sources":["webpack:///./src/pages/diary.js","webpack:///./src/components/title.js"],"names":["data","menu","css","title","allMarkdownRemark","totalCount","edges","map","node","key","id","to","fields","slug","rhythm","frontmatter","date","tags","excerpt","blogTitles","parseInt","Math","random","length"],"mappings":"+VAOe,sBAAe,IAAZA,EAAW,EAAXA,KAChB,OACE,YAAC,IAAD,CAAQC,KAAK,SACX,uBACE,kBACEC,IAAG,GAKFC,KAEH,sBAAKH,EAAKI,kBAAkBC,WAA5B,UACCL,EAAKI,kBAAkBE,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,mBAAKC,IAAKD,EAAKE,IACb,YAAC,IAAD,CACEC,GAAIH,EAAKI,OAAOC,KAChBX,IAAG,GAKH,kBACEA,IAAKA,YAAF,iBACgBY,YAAO,EAAI,GAD3B,MAIFN,EAAKO,YAAYZ,OAEpB,oBACED,IAAG,GAIFM,EAAKO,YAAYC,MAEpB,uBArBF,UAsBUR,EAAKO,YAAYE,KACzB,qBAAIT,EAAKU,kB,kCC7CvB,IAAMC,EAAa,CAAC,2BAA4B,2BAE5ChB,EAAQgB,EAAWC,SAASC,KAAKC,SAAWH,EAAWI,SAE5CpB","file":"component---src-pages-diary-js-ba15a650dec95f9e52c5.js","sourcesContent":["import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { Link, graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\nimport title from \"../components/title\"\n\nexport default ({ data }) => {\n  return (\n    <Layout menu=\"diary\">\n      <div>\n        <h1\n          css={css`\n            display: inline-block;\n            border-bottom: 1px solid;\n          `}\n        >\n          {title}\n        </h1>\n        <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link\n              to={node.fields.slug}\n              css={css`\n                text-decoration: none;\n                color: inherit;\n              `}\n            >\n              <h3\n                css={css`\n                  margin-bottom: ${rhythm(1 / 4)};\n                `}\n              >\n                {node.frontmatter.title}\n              </h3>\n              <span\n                css={css`\n                  color: #bbb;\n                `}\n              >\n                {node.frontmatter.date}\n              </span>\n              <br />\n              tags : {node.frontmatter.tags}\n              <p>{node.excerpt}</p>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: {\n        frontmatter: { category: { eq: \"diary\" }, published: { eq: true } }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"YYYY.MM.DD\")\n            tags\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","const blogTitles = [`Fake it till you make it`, \"Focus on just one thing\"]\n\nlet title = blogTitles[parseInt(Math.random() * blogTitles.length)]\n\nexport default title\n"],"sourceRoot":""}